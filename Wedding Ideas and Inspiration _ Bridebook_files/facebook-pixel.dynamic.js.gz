window['facebook-pixelDeps'] = ["/integrations/vendor/commons.f239a60eb1c0d6ae5bde.js"];window['facebook-pixelLoader'] = function() { return window["facebook-pixelIntegration"] =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"facebook-pixel": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp_name_Integration"] = window["webpackJsonp_name_Integration"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["qzi5","commons"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "F39V":
/*!*********************************************!*\
  !*** ./node_modules/to-camel-case/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var space = __webpack_require__(/*! to-space-case */ "NtLt")

/**
 * Export.
 */

module.exports = toCamelCase

/**
 * Convert a `string` to camel case.
 *
 * @param {String} string
 * @return {String}
 */

function toCamelCase(string) {
  return space(string).replace(/\s(\w)/g, function (matches, letter) {
    return letter.toUpperCase()
  })
}


/***/ }),

/***/ "qzi5":
/*!**************************************************!*\
  !*** ./integrations/facebook-pixel/lib/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Module dependencies.
 */

var integration = __webpack_require__(/*! @segment/analytics.js-integration */ "hjHq");

var each = __webpack_require__(/*! @ndhoule/each */ "6YGp");

var reject = __webpack_require__(/*! reject */ "bmjW");

var camel = __webpack_require__(/*! to-camel-case */ "F39V");

var is = __webpack_require__(/*! is */ "qMUi");

var dateformat = __webpack_require__(/*! dateformat */ "ubkq");

var Track = __webpack_require__(/*! segmentio-facade */ "NGGi").Track;

var sha256 = __webpack_require__(/*! js-sha256 */ "bCcq");
/**
 * Expose `Facebook Pixel`.
 */


var FacebookPixel = module.exports = integration('Facebook Pixel').global('fbq').option('pixelId', '').option('agent', 'seg').option('valueIdentifier', 'value').option('initWithExistingTraits', false).option('traverse', false).option('automaticConfiguration', true).option('whitelistPiiProperties', []).option('blacklistPiiProperties', []).option('standardEventsCustomProperties', []).option('keyForExternalId', '').option('userIdAsExternalId', false).option('limitedDataUse', true).option('disablePushState', false).option('allowDuplicatePageViews', false).mapping('standardEvents').mapping('legacyEvents').mapping('contentTypes').tag('<script src="//connect.facebook.net/en_US/fbevents.js">');
/**
 * FB requires these date fields be formatted in a specific way.
 * The specifications are non iso8601 compliant.
 * https://developers.facebook.com/docs/marketing-api/dynamic-ads-for-travel/audience
 * Therefore, we check if the property is one of these reserved fields.
 * If so, we check if we have converted it to an iso date object already.
 * If we have, we convert it again into Facebook's spec.
 * If we have not, the user has likely passed in a date string that already
 * adheres to FB's docs so we can just pass it through as is.
 */

var dateFields = ['checkinDate', 'checkoutDate', 'departingArrivalDate', 'departingDepartureDate', 'returningArrivalDate', 'returningDepartureDate', 'travelEnd', 'travelStart'];
/**
 * FB does not allow sending PII data with events. They provide a list of what they consider PII here:
 * https://developers.facebook.com/docs/facebook-pixel/pixel-with-ads/conversion-tracking
 * We need to check each property key to see if it matches what FB considers to be a PII property and strip it from the payload.
 * User's can override this by manually whitelisting keys they are ok with sending through in their integration settings.
 */

var defaultPiiProperties = ['email', 'firstName', 'lastName', 'gender', 'city', 'country', 'phone', 'state', 'zip', 'birthday'];
/**
 * Initialize Facebook Pixel.
 *
 * @param {Facade} page
 */

FacebookPixel.prototype.initialize = function () {
  window._fbq = function () {
    if (window.fbq.callMethod) {
      window.fbq.callMethod.apply(window.fbq, arguments);
    } else {
      window.fbq.queue.push(arguments);
    }
  };

  window.fbq = window.fbq || window._fbq;
  window.fbq.push = window.fbq;
  window.fbq.loaded = true;
  window.fbq.disablePushState = window.fbq.disablePushState || this.options.disablePushState;
  window.fbq.allowDuplicatePageViews = window.fbq.allowDuplicatePageViews || this.options.allowDuplicatePageViews;
  window.fbq.agent = window.fbq.agent || this.options.agent;
  window.fbq.version = '2.0';
  window.fbq.queue = window.fbq.queue || [];
  this.load(this.ready);

  if (!this.options.automaticConfiguration) {
    window.fbq('set', 'autoConfig', false, this.options.pixelId);
  }

  if (this.options.limitedDataUse) {
    this.validateAndSetDataProcessing(this.options.dataProcessingOptions || [['LDU'], 0, 0]);
  } else {
    // explicitly not enable Limited Data Use (LDU) mode
    window.fbq('dataProcessingOptions', []);
  }

  if (this.options.initWithExistingTraits) {
    var traits = this.formatTraits(this.analytics);
    window.fbq('init', this.options.pixelId, traits);
  } else {
    window.fbq('init', this.options.pixelId);
  }
};
/**
 * Has the Facebook Pixel library been loaded yet?
 *
 * @return {Boolean}
 */


FacebookPixel.prototype.loaded = function () {
  return !!(window.fbq && window.fbq.callMethod);
};
/**
 * Trigger a page view.
 *
 * @param {Facade} identify
 */


FacebookPixel.prototype.page = function () {
  window.fbq('track', 'PageView');
};
/**
 * Track an event.
 *
 * @param {Facade} track
 */


FacebookPixel.prototype.track = function (track) {
  var self = this;
  var event = track.event();
  var revenue = formatRevenue(track.revenue());
  var payload = this.buildPayload(track); // Revenue

  if (track.properties().hasOwnProperty('revenue')) {
    payload.value = formatRevenue(track.revenue()); // To keep compatible with the old implementation
    // that never added revenue to the payload

    delete payload.revenue;
  }

  var standard = this.standardEvents(event);
  var legacy = this.legacyEvents(event); // non-mapped events get sent as "custom events" with full
  // tranformed payload

  if (![].concat(standard, legacy).length) {
    window.fbq('trackSingleCustom', this.options.pixelId, event, payload, {
      eventID: track.proxy('messageId')
    });
    return;
  } // standard conversion events, mapped to one of 9 standard events
  // "Purchase" requires a currency parameter;
  // send full transformed payload


  each(function (event) {
    if (event === 'Purchase') payload.currency = track.currency(); // defaults to 'USD'

    window.fbq('trackSingle', self.options.pixelId, event, payload, {
      eventID: track.proxy('messageId')
    });
  }, standard); // legacy conversion events — mapped to specific "pixelId"s
  // send only currency and value

  each(function (event) {
    window.fbq('trackSingle', self.options.pixelId, event, {
      currency: track.currency(),
      value: revenue
    }, {
      eventID: track.proxy('messageId')
    });
  }, legacy);
};
/**
 * Product List Viewed.
 *
 * @api private
 * @param {Track} track category
 */


FacebookPixel.prototype.productListViewed = function (track) {
  var self = this;
  var contentType;
  var contentIds = [];
  var contents = [];
  var products = track.products();
  var customProperties = this.buildPayload(track, true); // First, check to see if a products array with productIds has been defined.

  if (Array.isArray(products)) {
    products.forEach(function (product) {
      var track = new Track({
        properties: product
      });
      var productId = track.proxy('properties.product_id') || track.productId() || track.id();

      if (productId) {
        contentIds.push(productId);
        contents.push({
          id: productId,
          quantity: track.quantity()
        });
      }
    });
  } // If no products have been defined, fallback on legacy behavior.
  // Facebook documents the content_type parameter decision here: https://developers.facebook.com/docs/facebook-pixel/api-reference


  if (contentIds.length) {
    contentType = ['product'];
  } else {
    contentIds.push(track.category() || '');
    contents.push({
      id: track.category() || '',
      quantity: 1
    });
    contentType = ['product_group'];
  }

  window.fbq('trackSingle', this.options.pixelId, 'ViewContent', merge({
    content_ids: contentIds,
    content_type: this.getContentType(track, contentType),
    contents: contents
  }, customProperties), {
    eventID: track.proxy('messageId')
  }); // fall through for mapped legacy conversions

  each(function (event) {
    window.fbq('trackSingle', self.options.pixelId, event, {
      currency: track.currency(),
      value: formatRevenue(track.revenue())
    }, {
      eventID: track.proxy('messageId')
    });
  }, this.legacyEvents(track.event()));
};
/**
 * Product viewed.
 *
 * @api private
 * @param {Track} track
 */


FacebookPixel.prototype.productViewed = function (track) {
  var self = this;
  var useValue = this.options.valueIdentifier === 'value';
  var customProperties = this.buildPayload(track, true);
  window.fbq('trackSingle', this.options.pixelId, 'ViewContent', merge({
    content_ids: [track.productId() || track.id() || track.sku() || ''],
    content_type: this.getContentType(track, ['product']),
    content_name: track.name() || '',
    content_category: track.category() || '',
    currency: track.currency(),
    value: useValue ? formatRevenue(track.value()) : formatRevenue(track.price()),
    contents: [{
      id: track.productId() || track.id() || track.sku() || '',
      quantity: track.quantity(),
      item_price: track.price()
    }]
  }, customProperties), {
    eventID: track.proxy('messageId')
  }); // fall through for mapped legacy conversions

  each(function (event) {
    window.fbq('trackSingle', self.options.pixelId, event, {
      currency: track.currency(),
      value: useValue ? formatRevenue(track.value()) : formatRevenue(track.price())
    }, {
      eventID: track.proxy('messageId')
    });
  }, this.legacyEvents(track.event()));
};
/**
 * Product added.
 *
 * @api private
 * @param {Track} track
 */


FacebookPixel.prototype.productAdded = function (track) {
  var self = this;
  var useValue = this.options.valueIdentifier === 'value';
  var customProperties = this.buildPayload(track, true);
  window.fbq('trackSingle', this.options.pixelId, 'AddToCart', merge({
    content_ids: [track.productId() || track.id() || track.sku() || ''],
    content_type: this.getContentType(track, ['product']),
    content_name: track.name() || '',
    content_category: track.category() || '',
    currency: track.currency(),
    value: useValue ? formatRevenue(track.value()) : formatRevenue(track.price()),
    contents: [{
      id: track.productId() || track.id() || track.sku() || '',
      quantity: track.quantity(),
      item_price: track.price()
    }]
  }, customProperties), {
    eventID: track.proxy('messageId')
  }); // fall through for mapped legacy conversions

  each(function (event) {
    window.fbq('trackSingle', self.options.pixelId, event, {
      currency: track.currency(),
      value: useValue ? formatRevenue(track.value()) : formatRevenue(track.price())
    }, {
      eventID: track.proxy('messageId')
    });
  }, this.legacyEvents(track.event()));
};
/**
 * Order Completed.
 *
 * @api private
 * @param {Track} track
 */


FacebookPixel.prototype.orderCompleted = function (track) {
  var self = this;
  var products = track.products();
  var customProperties = this.buildPayload(track, true);
  var revenue = formatRevenue(track.revenue()); // Order completed doesn't have a top-level category spec'd.
  // Let's default to the category of the first product. - @gabriel

  var contentType = this.getContentType(track, ['product']);
  var contentIds = [];
  var contents = [];

  for (var i = 0; i < products.length; i++) {
    var trackItem = new Track({
      properties: products[i]
    });
    var pId = trackItem.productId() || trackItem.id() || trackItem.sku();
    contentIds.push(pId);
    var content = {
      id: pId,
      quantity: trackItem.quantity()
    };

    if (trackItem.price()) {
      content.item_price = trackItem.price();
    }

    contents.push(content);
  }

  window.fbq('trackSingle', this.options.pixelId, 'Purchase', merge({
    content_ids: contentIds,
    content_type: contentType,
    currency: track.currency(),
    value: revenue,
    contents: contents,
    num_items: contentIds.length
  }, customProperties), {
    eventID: track.proxy('messageId')
  }); // fall through for mapped legacy conversions

  each(function (event) {
    window.fbq('trackSingle', self.options.pixelId, event, {
      currency: track.currency(),
      value: formatRevenue(track.revenue())
    }, {
      eventID: track.proxy('messageId')
    });
  }, this.legacyEvents(track.event()));
};

FacebookPixel.prototype.productsSearched = function (track) {
  var self = this;
  var customProperties = this.buildPayload(track, true);
  window.fbq('trackSingle', this.options.pixelId, 'Search', merge({
    search_string: track.proxy('properties.query')
  }, customProperties), {
    eventID: track.proxy('messageId')
  }); // fall through for mapped legacy conversions

  each(function (event) {
    window.fbq('trackSingle', self.options.pixelId, event, {
      currency: track.currency(),
      value: formatRevenue(track.revenue())
    }, {
      eventID: track.proxy('messageId')
    });
  }, this.legacyEvents(track.event()));
};

FacebookPixel.prototype.checkoutStarted = function (track) {
  var self = this;
  var products = track.products();
  var contentIds = [];
  var contents = [];
  var contentCategory = track.category();
  var customProperties = this.buildPayload(track, true);

  for (var i = 0; i < products.length; i++) {
    var trackItem = new Track({
      properties: products[i]
    });
    var pId = trackItem.productId() || trackItem.id() || trackItem.sku();
    contentIds.push(pId);
    var content = {
      id: pId,
      quantity: trackItem.quantity(),
      item_price: track.price()
    };

    if (trackItem.price()) {
      content.item_price = trackItem.price();
    }

    contents.push(content);
  } // If no top-level category was defined use that of the first product. @gabriel


  if (!contentCategory && products[0] && products[0].category) {
    contentCategory = products[0].category;
  }

  window.fbq('trackSingle', this.options.pixelId, 'InitiateCheckout', merge({
    content_category: contentCategory,
    content_ids: contentIds,
    content_type: this.getContentType(track, ['product']),
    contents: contents,
    currency: track.currency(),
    num_items: contentIds.length,
    value: formatRevenue(track.revenue())
  }, customProperties), {
    eventID: track.proxy('messageId')
  }); // fall through for mapped legacy conversions

  each(function (event) {
    window.fbq('trackSingle', self.options.pixelId, event, {
      currency: track.currency(),
      value: formatRevenue(track.revenue())
    }, {
      eventID: track.proxy('messageId')
    });
  }, this.legacyEvents(track.event()));
};
/**
 * Returns an array of mapped content types for the category,
 * the provided value as an integration option or the default provided value.
 *
 * @param {Facade.Track} track Track payload
 * @param {Array} defaultValue Default array value returned if the previous parameters are not defined.
 *
 * @return Content Type array as defined in:
 * - https://developers.facebook.com/docs/facebook-pixel/reference/#object-properties
 * - https://developers.facebook.com/docs/marketing-api/dynamic-ads-for-real-estate/audience
 */


FacebookPixel.prototype.getContentType = function (track, defaultValue) {
  // 1- Integration options takes preference over everything
  var options = track.options('Facebook Pixel');

  if (options && options.contentType) {
    return [options.contentType];
  } // 2- Defined by category and its mappings


  var category = track.category();

  if (!category) {
    // Get the first product's category
    var products = track.products();

    if (products && products.length) {
      category = products[0].category;
    }
  }

  if (category) {
    var mapped = this.contentTypes(category);

    if (mapped.length) {
      return mapped;
    }
  } // 3- The default value


  return defaultValue;
};
/**
 * Get Revenue Formatted Correctly for FB.
 *
 * @api private
 * @param {Track} track
 */


function formatRevenue(revenue) {
  return Number(revenue || 0).toFixed(2);
}
/**
 * Get Traits Formatted Correctly for FB.
 *
 * https://developers.facebook.com/docs/facebook-pixel/pixel-with-ads/conversion-tracking#advanced_match
 *
 * @api private
 */


FacebookPixel.prototype.formatTraits = function formatTraits(analytics) {
  var traits = analytics && analytics.user().traits();
  if (!traits) return {};
  var firstName;
  var lastName; // Check for firstName property
  // else check for name

  if (traits.firstName || traits.first_name) {
    firstName = traits.firstName || traits.first_name;
    lastName = traits.lastName || traits.last_name;
  } else {
    var nameArray = traits.name && traits.name.toLowerCase().split(' ') || [];
    firstName = nameArray.shift();
    lastName = nameArray.pop();
  }

  var gender;

  if (traits.gender && is.string(traits.gender)) {
    gender = traits.gender.slice(0, 1).toLowerCase();
  }

  var birthday = traits.birthday && dateformat(traits.birthday, 'yyyymmdd');
  var address = traits.address || {};
  var city = address.city && address.city.split(' ').join('').toLowerCase();
  var state = address.state && address.state.toLowerCase();
  var postalCode = address.postalCode || address.postal_code;
  var external_id; // eslint-disable-line

  if (this.options.keyForExternalId) {
    external_id = traits[this.options.keyForExternalId]; // eslint-disable-line
  }

  if (!external_id && this.options.userIdAsExternalId && analytics) {
    // eslint-disable-line
    external_id = analytics.user().id() || analytics.user().anonymousId(); // eslint-disable-line
  }

  return reject({
    em: traits.email,
    fn: firstName,
    ln: lastName,
    ph: traits.phone,
    ge: gender,
    db: birthday,
    ct: city,
    st: state,
    zp: postalCode,
    external_id: external_id // eslint-disable-line

  });
};
/**
 * Builds the FB Event payload. It checks for PII fields and custom properties. If the event is Standard Event,
 * only properties defined in the setting are passed to the payload.
 *
 * @param {Facade.Track} track Track event.
 * @param {boolean} isStandardEvent Defines if the track call is a standard event.
 *
 * @return Payload to send deriveded from the track properties.
 */


FacebookPixel.prototype.buildPayload = function (track, isStandardEvent) {
  var whitelistPiiProperties = this.options.whitelistPiiProperties || [];
  var blacklistPiiProperties = this.options.blacklistPiiProperties || [];
  var standardEventsCustomProperties = this.options.standardEventsCustomProperties || []; // Transforming the setting in a map for easier lookups.

  var customPiiProperties = {};

  for (var i = 0; i < blacklistPiiProperties.length; i++) {
    var configuration = blacklistPiiProperties[i];
    customPiiProperties[configuration.propertyName] = configuration.hashProperty;
  }

  var payload = {};
  var properties = track.properties();

  for (var property in properties) {
    if (!properties.hasOwnProperty(property)) {
      continue;
    } // Standard Events only contains custom properties defined in the configuration
    // If the property is not listed there, we just drop it.


    if (isStandardEvent && standardEventsCustomProperties.indexOf(property) < 0) {
      continue;
    }

    var value = properties[property]; // Dates

    if (dateFields.indexOf(camel(property)) >= 0) {
      if (is.date(value)) {
        payload[property] = value.toISOString().split('T')[0];
        continue;
      }
    } // Custom PII properties


    if (customPiiProperties.hasOwnProperty(property)) {
      // hash or drop
      if (customPiiProperties[property] && typeof value === 'string') {
        payload[property] = sha256(value);
      }

      continue;
    } // Default PII properties


    var isPropertyPii = defaultPiiProperties.indexOf(property) >= 0;
    var isPropertyWhitelisted = whitelistPiiProperties.indexOf(property) >= 0;

    if (!isPropertyPii || isPropertyWhitelisted) {
      payload[property] = value;
    }
  }

  return payload;
};
/**
 * Validates that a set of parameters are formatted correctly and passes them to the pixel instance.
 * https://developers.facebook.com/docs/marketing-apis/data-processing-options#reference
 *
 * @param {Array} options
 *
 * @api private
 */


FacebookPixel.prototype.validateAndSetDataProcessing = function (params) {
  var lenOk = params.length === 3;
  var valOk = Array.isArray(params[0]) && typeof params[1] === 'number' && typeof params[2] === 'number'; // Pass the data processing options if they're valid, otherwise, fallback to geolocation.

  if (lenOk && valOk) {
    window.fbq('dataProcessingOptions', params[0], params[1], params[2]);
  } else {
    window.fbq('dataProcessingOptions', ['LDU'], 0, 0);
  }
};
/**
 * Merge two javascript objects. This works similarly to `Object.assign({}, obj1, obj2)`
 * but it's compatible with old browsers. The properties of the first argument takes preference
 * over the other.
 *
 * It does not do fancy stuff, just use it with top level properties.
 *
 * @param {Object} obj1 Object 1
 * @param {Object} obj2 Object 2
 *
 * @return {Object} a new object with all the properties of obj1 and the remainder of obj2.
 */


function merge(obj1, obj2) {
  var res = {}; // All properties of obj1

  for (var propObj1 in obj1) {
    if (obj1.hasOwnProperty(propObj1)) {
      res[propObj1] = obj1[propObj1];
    }
  } // Extra properties of obj2


  for (var propObj2 in obj2) {
    if (obj2.hasOwnProperty(propObj2) && !res.hasOwnProperty(propObj2)) {
      res[propObj2] = obj2[propObj2];
    }
  }

  return res;
} // Exposed only for testing


FacebookPixel.merge = merge;

/***/ }),

/***/ "ubkq":
/*!***************************************************!*\
  !*** ./node_modules/dateformat/lib/dateformat.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*
 * Date Format 1.2.3
 * (c) 2007-2009 Steven Levithan <stevenlevithan.com>
 * MIT license
 *
 * Includes enhancements by Scott Trenda <scott.trenda.net>
 * and Kris Kowal <cixar.com/~kris.kowal/>
 *
 * Accepts a date, a mask, or a date and a mask.
 * Returns a formatted version of the given date.
 * The date defaults to the current date/time.
 * The mask defaults to dateFormat.masks.default.
 */

(function(global) {
  'use strict';

  var dateFormat = (function() {
      var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZWN]|'[^']*'|'[^']*'/g;
      var timezone = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g;
      var timezoneClip = /[^-+\dA-Z]/g;
  
      // Regexes and supporting functions are cached through closure
      return function (date, mask, utc, gmt) {
  
        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)
        if (arguments.length === 1 && kindOf(date) === 'string' && !/\d/.test(date)) {
          mask = date;
          date = undefined;
        }
  
        date = date || new Date;
  
        if(!(date instanceof Date)) {
          date = new Date(date);
        }
  
        if (isNaN(date)) {
          throw TypeError('Invalid date');
        }
  
        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);
  
        // Allow setting the utc/gmt argument via the mask
        var maskSlice = mask.slice(0, 4);
        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {
          mask = mask.slice(4);
          utc = true;
          if (maskSlice === 'GMT:') {
            gmt = true;
          }
        }
  
        var _ = utc ? 'getUTC' : 'get';
        var d = date[_ + 'Date']();
        var D = date[_ + 'Day']();
        var m = date[_ + 'Month']();
        var y = date[_ + 'FullYear']();
        var H = date[_ + 'Hours']();
        var M = date[_ + 'Minutes']();
        var s = date[_ + 'Seconds']();
        var L = date[_ + 'Milliseconds']();
        var o = utc ? 0 : date.getTimezoneOffset();
        var W = getWeek(date);
        var N = getDayOfWeek(date);
        var flags = {
          d:    d,
          dd:   pad(d),
          ddd:  dateFormat.i18n.dayNames[D],
          dddd: dateFormat.i18n.dayNames[D + 7],
          m:    m + 1,
          mm:   pad(m + 1),
          mmm:  dateFormat.i18n.monthNames[m],
          mmmm: dateFormat.i18n.monthNames[m + 12],
          yy:   String(y).slice(2),
          yyyy: y,
          h:    H % 12 || 12,
          hh:   pad(H % 12 || 12),
          H:    H,
          HH:   pad(H),
          M:    M,
          MM:   pad(M),
          s:    s,
          ss:   pad(s),
          l:    pad(L, 3),
          L:    pad(Math.round(L / 10)),
          t:    H < 12 ? 'a'  : 'p',
          tt:   H < 12 ? 'am' : 'pm',
          T:    H < 12 ? 'A'  : 'P',
          TT:   H < 12 ? 'AM' : 'PM',
          Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),
          o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),
          S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],
          W:    W,
          N:    N
        };
  
        return mask.replace(token, function (match) {
          if (match in flags) {
            return flags[match];
          }
          return match.slice(1, match.length - 1);
        });
      };
    })();

  dateFormat.masks = {
    'default':               'ddd mmm dd yyyy HH:MM:ss',
    'shortDate':             'm/d/yy',
    'mediumDate':            'mmm d, yyyy',
    'longDate':              'mmmm d, yyyy',
    'fullDate':              'dddd, mmmm d, yyyy',
    'shortTime':             'h:MM TT',
    'mediumTime':            'h:MM:ss TT',
    'longTime':              'h:MM:ss TT Z',
    'isoDate':               'yyyy-mm-dd',
    'isoTime':               'HH:MM:ss',
    'isoDateTime':           'yyyy-mm-dd\'T\'HH:MM:sso',
    'isoUtcDateTime':        'UTC:yyyy-mm-dd\'T\'HH:MM:ss\'Z\'',
    'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'
  };

  // Internationalization strings
  dateFormat.i18n = {
    dayNames: [
      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',
      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'
    ],
    monthNames: [
      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',
      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'
    ]
  };

function pad(val, len) {
  val = String(val);
  len = len || 2;
  while (val.length < len) {
    val = '0' + val;
  }
  return val;
}

/**
 * Get the ISO 8601 week number
 * Based on comments from
 * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html
 *
 * @param  {Object} `date`
 * @return {Number}
 */
function getWeek(date) {
  // Remove time components of date
  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());

  // Change date to Thursday same week
  targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);

  // Take January 4th as it is always in week 1 (see ISO 8601)
  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);

  // Change date to Thursday same week
  firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);

  // Check if daylight-saving-time-switch occured and correct for it
  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();
  targetThursday.setHours(targetThursday.getHours() - ds);

  // Number of weeks between target Thursday and first Thursday
  var weekDiff = (targetThursday - firstThursday) / (86400000*7);
  return 1 + Math.floor(weekDiff);
}

/**
 * Get ISO-8601 numeric representation of the day of the week
 * 1 (for Monday) through 7 (for Sunday)
 * 
 * @param  {Object} `date`
 * @return {Number}
 */
function getDayOfWeek(date) {
  var dow = date.getDay();
  if(dow === 0) {
    dow = 7;
  }
  return dow;
}

/**
 * kind-of shortcut
 * @param  {*} val
 * @return {String}
 */
function kindOf(val) {
  if (val === null) {
    return 'null';
  }

  if (val === undefined) {
    return 'undefined';
  }

  if (typeof val !== 'object') {
    return typeof val;
  }

  if (Array.isArray(val)) {
    return 'array';
  }

  return {}.toString.call(val)
    .slice(8, -1).toLowerCase();
};



  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return dateFormat;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this);


/***/ })

/******/ });
//# sourceMappingURL=facebook-pixel.js.map
};